class CFG():

	PYPATH="/foo/venv/bin/python" 
	# find this path using `which python` while in a virtual environment - must use the same VM for cron jobs 

	TOTTIME=180 # total seconds turned on per 24 hours
	DAYWEIGHT=2 # night total will be one daytime/weight long
	DAYWTIMES = [9,11,13,15,17,19] # run a day time watering at each of these hours
	NIGHTWTIMES = [23,3] # and these for night
	CTF = 'gencrontab.txt'

	LOGTO = 'watercron.log'

	# adjust the script skeleton to suit your chuangmi plug token and ip
	# find token and ip using
	# mirobo to get chuangmi plug token - it can't be found otherwise as it doesn't hook into the gateway's list of devices...go figure
    # >mirobo discover
    # note - adding the discovery command just resulted in a timeout for me - unadorned discovery found my plug
    # the following template is the code for each cron job - day or night vary only by name and sleep duration. It
	# gets instantiated to populate the strings in the header and the duration
	SKEL = """#!%s
##written by %s @ %s
from miio import chuangmi_plug
from time import sleep
from datetime import datetime

IP="192.x.x.x"
TOK="xxxxx" # mine not yours...

cP = chuangmi_plug.ChuangmiPlug(ip=IP, token=TOK, start_id=0, debug=0, lazy_discover=True, model='chuangmi.plug.m1')
cP.on()
sleep(0.01)
tstamp = datetime.now().ctime()
print('### %%s: watering cron job has turned plug on for %f seconds' %% tstamp)
print(cP.status())
sleep(%f)
cP.off()
sleep(0.01)
tstamp = datetime.now().ctime()
print('### %%s: watering cron job has turned plug off' %% tstamp)
print(cP.status())
"""
